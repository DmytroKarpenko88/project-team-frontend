{"version":3,"file":"static/js/696.755e2ba4.chunk.js","mappings":"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","sources":["components/UserCard/UserData/UserData.styled.jsx","components/UserCard/UserForm/UserForm.styled.jsx","utils/shemas/validationSchema.jsx","components/UserCard/UserForm/UserForm.jsx","components/UserCard/UserData/UserData.jsx","components/UserCard/PetsList/PetsList.styled.jsx","components/UserCard/PetsList/PetsList.jsx","components/UserCard/PetsData/PetsData.jsx","pages/User/User.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { theme } from 'styles';\n\nconst MainContainer = styled.section`\n  max-width: 100vw;\n  margin-top: 44px;\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.spacing.step * 11.5}px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    flex-direction: raw;\n    gap: 32px;\n    gap: ${theme.spacing.step * 8}px;\n  }\n`;\n\nconst Title = styled.h2`\n  color: ${theme.colors.black};\n  font-family: ${theme.fonts.main.medium};\n  font-size: ${theme.fontSizes.l};\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: 0.8px;\n  margin-bottom: 18px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 28px;\n    margin-bottom: 48px;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    margin-bottom: 24px;\n  }\n`;\n\nconst UserCardContainer = styled.div`\n  position: relative;\n  padding: 20px;\n  border-radius: 40px;\n  background: ${theme.colors.white};\n  box-shadow: ${theme.boxShadows.main};\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    height: max-content;\n  }\n`;\n\nconst EditBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  border: none;\n  margin: 0;\n  padding: 0;\n  outline: transparent;\n  background-color: transparent;\n  cursor: pointer;\n  svg {\n    width: 24px;\n    height: 24px;\n    fill: ${theme.colors.blue};\n  }\n  &:hover {\n    svg {\n      fill: ${theme.colors.yellow};\n    }\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    right: 18px;\n  }\n`;\n\nconst PetsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 24px;\n`;\n\nconst AddPetBtn = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${theme.spacing.step * 1}px;\n  color: ${theme.colors.white};\n  font-weight: 700;\n  width: 134px;\n  padding: 8px 20px;\n  font-size: ${theme.fontSizes.m};\n  line-height: normal;\n  letter-spacing: 0.64px;\n  background: ${theme.colors.blue};\n  border: none;\n  border-radius: 40px;\n  box-shadow: ${theme.boxShadows.main};\n  transition: background-color ${theme.transition.duration},\n    ${theme.transition.main};\n  svg {\n    stroke: ${theme.colors.white};\n  }\n  &:hover,\n  &:focus {\n    background: ${theme.colors.grBlue2};\n    svg {\n      stroke: ${theme.colors.white};\n    }\n  }\n`;\n\nexport {\n  UserCardContainer,\n  MainContainer,\n  Title,\n  EditBtn,\n  PetsContainer,\n  AddPetBtn,\n};\n","import { styled } from 'styled-components';\nimport { theme } from 'styles';\n\nconst StyledForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    flex-direction: row-reverse;\n    align-items: flex-start;\n    gap: ${theme.spacing.step * 17.75}px;\n    width: calc(100% - 34px);\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n  }\n`;\n\nconst FieldsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 16px;\n  margin-top: 22px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    margin-top: 0;\n  }\n`;\n\nconst UserPhoto = styled.img`\n  display: block;\n  margin: auto;\n  width: 182px;\n  height: 182px;\n  border-radius: 40px;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nconst FileInputLabel = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: ${theme.fonts.main.regular};\n  font-size: ${theme.fontSizes.s};\n  line-height: 22px;\n  letter-spacing: 0.48px;\n  color: ${theme.colors.black};\n  gap: 8px;\n  transition: color ${theme.transition.duration} ${theme.transition.main};\n  cursor: pointer;\n  svg {\n    transition: fill ${theme.transition.duration} ${theme.transition.main};\n  }\n  &:hover,\n  &:focus {\n    color: ${theme.colors.yellow};\n    svg {\n      stroke: ${theme.colors.yellow};\n    }\n  }\n`;\n\nconst FileInput = styled.input`\n  display: none;\n`;\n\nconst ConfirmWrapper = styled.div`\n  margin-top: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  .cancel-icon svg {\n    stroke: ${theme.colors.red};\n  }\n`;\n\nconst Text = styled.p`\n  font-family: ${theme.fonts.main.regular};\n  color: ${theme.colors.black};\n  font-size: ${theme.fontSizes.xs};\n  line-height: 22px;\n  letter-spacing: 0.48px;\n`;\n\nconst InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-items: flex-end;\n  font-size: ${theme.fontSizes.s};\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: 0.56px;\n`;\n\nconst Input = styled.input`\n  width: calc(100vw - 40vw);\n  display: flex;\n  padding: 4px 12px;\n  align-items: center;\n  border-radius: 20px;\n  border: 1px solid ${theme.colors.blue};\n  font-family: ${theme.fonts.main.regular};\n  font-size: ${theme.fontSizes.xs};\n  line-height: normal;\n  letter-spacing: 0.48px;\n  transition: border-color ${theme.transition.duration} ${theme.transition.main};\n\n  &:hover,\n  &:focus {\n    border-color: ${theme.colors.yellow};\n    outline: transparent;\n  }\n  @media screen and (min-width: 480px) {\n    width: 255px;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    height: 30px;\n    font-size: ${theme.fontSizes.m};\n  }\n`;\n\nconst SubmitBtn = styled.button`\n  display: flex;\n  width: 248px;\n  margin-top: 21px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 6px 107px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 40px;\n  background: ${theme.colors.blue};\n  font-family: ${theme.fonts.main.bold};\n  font-size: ${theme.fontSizes.s};\n  line-height: normal;\n  letter-spacing: 0.56px;\n  cursor: pointer;\n\n  transition: all ${theme.transition.duration} ${theme.transition.main};\n\n  &:hover,\n  &:focus {\n    background: ${theme.colors.grBlue2};\n  }\n\n  &:disabled {\n    background: ${theme.colors.grey};\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    width: 255px;\n    margin-top: 10px;\n    margin-left: 120px;\n  }\n`;\n\nconst Error = styled.p`\n  position: absolute;\n  bottom: -17px;\n  left: 0;\n  color: ${theme.colors.red};\n  font-size: ${theme.fontSizes.xs};\n  white-space: nowrap;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    left: 32%;\n  }\n`;\n\nexport {\n  StyledForm,\n  FieldsContainer,\n  Label,\n  Input,\n  SubmitBtn,\n  Error,\n  InputContainer,\n  UserPhoto,\n  FileInputLabel,\n  FileInput,\n  ConfirmWrapper,\n  Text,\n};\n","import * as Yup from 'yup';\n\nconst phoneRegExp = /^(\\+380\\d{9})$/;\nconst dateRegExp =\n  /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[13-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\n\nconst cityRegExp = /^[A-Z][A-Za-z\\s]*$/;\n\nconst validationSchema = Yup.object().shape({\n  avatar: Yup.mixed()\n    .test('file-size', 'File size is too large', value => {\n      if (value) {\n        return value.size < 3 * 1024 * 1024;\n      }\n      return true;\n    })\n    .required('File is required'),\n  name: Yup.string().required('Please, enter your name'),\n  email: Yup.string()\n    .email('Enter correct email')\n    .required('Please, enter your email'),\n  birthday: Yup.string()\n    .matches(dateRegExp, 'Correct format: dd.mm.yyyy')\n    .max(new Date(), 'Future date is not allowed')\n    .required('Birthday is required'),\n  phone: Yup.string()\n    .matches(phoneRegExp, 'Enter the phone number +380...')\n    .required('Enter your phone number'),\n  city: Yup.string()\n    .matches(cityRegExp, 'Enter valid format for city')\n    .required('Please, enter your city'),\n});\n\nexport default validationSchema;\n","import { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport {\n  ConfirmWrapper,\n  Error,\n  FieldsContainer,\n  FileInput,\n  FileInputLabel,\n  Input,\n  InputContainer,\n  Label,\n  StyledForm,\n  SubmitBtn,\n  Text,\n  UserPhoto,\n} from './UserForm.styled';\n// import Loader from 'components/Loader/Loader';\nimport validationSchema from 'utils/shemas/validationSchema';\nimport defaultAvatar from 'images/Profile/Photo_default_2x.jpg';\nimport { Camera, Check, Cross } from 'components/icons';\n\nconst UserForm = ({ disabled, setIsFormDisabled }) => {\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [errorsVisible, setErrorsVisible] = useState(true);\n\n  const initialValues = {\n    avatar: '',\n    name: '',\n    email: '',\n    birthday: '',\n    phone: '',\n    city: '',\n  };\n\n  const formikProps = useFormik({\n    initialValues,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      if (Object.keys(formikProps.errors).length === 0) {\n        const formData = new FormData();\n        for (let key in values) {\n          formData.append(`${key}`, values[key]);\n        }\n        setIsFormDisabled(prevState => !prevState);\n      }\n    },\n  });\n\n  useEffect(() => {\n    if (!disabled) {\n      setErrorsVisible(true);\n    } else {\n      setErrorsVisible(false);\n      setShowConfirm(false);\n    }\n  }, [disabled, formikProps]);\n\n  const handleFileInputChange = event => {\n    const file = event.target.files[0];\n    formikProps.setFieldValue('avatar', file);\n    setShowConfirm(true);\n  };\n\n  return (\n    <>\n      <form onSubmit={formikProps.handleSubmit}>\n        <StyledForm>\n          <div>\n            <UserPhoto src={defaultAvatar} />\n\n            {!disabled && !showConfirm && (\n              <div style={{ marginTop: '15px' }}>\n                <FileInputLabel htmlFor=\"file\">\n                  <Camera /> Edit photo\n                </FileInputLabel>\n                <FileInput\n                  type=\"file\"\n                  name=\"avatar\"\n                  id=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleFileInputChange}\n                />\n              </div>\n            )}\n            {showConfirm && !disabled && (\n              <ConfirmWrapper>\n                <button>\n                  <Check id=\"confirm\" />\n                </button>\n                <Text>Confirm</Text>\n                <button className=\"cancel-icon\">\n                  <Cross id=\"cancel\" />\n                </button>\n              </ConfirmWrapper>\n            )}\n          </div>\n          <FieldsContainer>\n            <InputContainer>\n              <Label htmlFor=\"name\">Name:</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Your name\"\n                disabled={disabled}\n                onChange={formikProps.handleChange}\n                value={formikProps.values.name}\n                error={formikProps.touched.name && formikProps.errors.name}\n              />\n              {errorsVisible &&\n                formikProps.touched.name &&\n                formikProps.errors.name && (\n                  <Error>{formikProps.errors.name}</Error>\n                )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label htmlFor=\"email\">Email:</Label>\n              <Input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"user@mail.com\"\n                disabled={disabled}\n                onChange={formikProps.handleChange}\n                value={formikProps.values.email}\n                error={formikProps.touched.email && formikProps.errors.email}\n              />\n              {errorsVisible &&\n                formikProps.touched.email &&\n                formikProps.errors.email && (\n                  <Error>{formikProps.errors.email}</Error>\n                )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label htmlFor=\"birthday\">Birthday:</Label>\n              <Input\n                type=\"text\"\n                name=\"birthday\"\n                placeholder=\"dd.mm.yyyy\"\n                disabled={disabled}\n                onChange={formikProps.handleChange}\n                value={formikProps.values.birthday}\n                error={\n                  formikProps.touched.birthday && formikProps.errors.birthday\n                }\n              />\n              {errorsVisible &&\n                formikProps.touched.birthday &&\n                formikProps.errors.birthday && (\n                  <Error>{formikProps.errors.birthday}</Error>\n                )}\n            </InputContainer>\n\n            <InputContainer>\n              {' '}\n              <Label htmlFor=\"phone\">Phone:</Label>\n              <Input\n                type=\"text\"\n                name=\"phone\"\n                placeholder=\"+380...\"\n                disabled={disabled}\n                onChange={formikProps.handleChange}\n                value={formikProps.values.phone}\n                error={formikProps.touched.phone && formikProps.errors.phone}\n              />\n              {errorsVisible &&\n                formikProps.touched.phone &&\n                formikProps.errors.phone && (\n                  <Error>{formikProps.errors.phone}</Error>\n                )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label htmlFor=\"city\">City:</Label>\n              <Input\n                type=\"text\"\n                name=\"city\"\n                placeholder=\"City\"\n                disabled={disabled}\n                onChange={formikProps.handleChange}\n                value={formikProps.values.city}\n                error={formikProps.touched.city && formikProps.errors.city}\n              />\n              {errorsVisible &&\n                formikProps.touched.city &&\n                formikProps.errors.city && (\n                  <Error>{formikProps.errors.city}</Error>\n                )}\n            </InputContainer>\n\n            {!disabled && (\n              <SubmitBtn type=\"submit\" disabled={showConfirm}>\n                Save\n              </SubmitBtn>\n            )}\n          </FieldsContainer>\n        </StyledForm>\n      </form>\n      {/* <Loader /> */}\n    </>\n  );\n};\n\nexport default UserForm;\n","import { useEffect, useState } from 'react';\nimport { EditBtn, UserCardContainer } from './UserData.styled';\nimport LogoutBtn from 'components/Logout/LogoutBtn';\nimport { Cross, Edit } from 'components/icons';\nimport UserForm from '../UserForm/UserForm';\n\nconst UserData = () => {\n  const [isFormDisabled, setIsFormDisabled] = useState(true);\n\n  // const { user } = useAuth;\n\n  useEffect(() => {\n    setIsFormDisabled(true);\n  }, []);\n\n  return (\n    <>\n      <UserCardContainer>\n        {isFormDisabled ? (\n          <EditBtn onClick={() => setIsFormDisabled(false)}>\n            <Edit />\n          </EditBtn>\n        ) : (\n          <EditBtn onClick={() => setIsFormDisabled(true)}>\n            <Cross />\n          </EditBtn>\n        )}\n        <UserForm\n          disabled={isFormDisabled}\n          setIsFormDisabled={setIsFormDisabled}\n        />\n        {isFormDisabled && <LogoutBtn />}\n      </UserCardContainer>\n    </>\n  );\n};\n\nexport default UserData;\n","import styled from 'styled-components';\nimport { theme } from 'styles';\n\nexport const PetsListStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${theme.spacing.step * 5}px;\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    align-items: flex-start;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: ${theme.fontSizes.l};\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: 0.8px;\n  color: ${theme.colors.black};\n\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 28px;\n  }\n`;\n","import React from 'react';\nimport { PetsListStyled } from './PetsList.styled';\n\nconst PetsList = () => {\n  return <PetsListStyled></PetsListStyled>;\n};\n\nexport default PetsList;\n","import React from 'react';\nimport PetsList from '../PetsList/PetsList';\n\nconst PetsData = () => {\n  return (\n    <>\n      <PetsList />\n    </>\n  );\n};\n\nexport default PetsData;\n","import UserData from 'components/UserCard/UserData/UserData';\nimport {\n  AddPetBtn,\n  MainContainer,\n  PetsContainer,\n  Title,\n} from 'components/UserCard/UserData/UserData.styled';\nimport PetsData from 'components/UserCard/PetsData/PetsData';\nimport { PlusSmall } from 'components/icons';\n\nconst User = () => {\n  return (\n    <>\n      <MainContainer>\n        <div>\n          <Title>My information:</Title>\n          <UserData />\n        </div>\n\n        <div style={{ width: '100%' }}>\n          <PetsContainer>\n            <Title>My pets:</Title>\n            <AddPetBtn to=\"/add-pet\">\n              Add Pet <PlusSmall />\n            </AddPetBtn>\n          </PetsContainer>\n          <PetsData />\n        </div>\n      </MainContainer>\n    </>\n  );\n};\n\nexport default User;\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","theme","Title","_templateObject2","UserCardContainer","_templateObject3","EditBtn","_templateObject4","PetsContainer","_templateObject5","AddPetBtn","Link","_templateObject6","StyledForm","FieldsContainer","UserPhoto","FileInputLabel","FileInput","ConfirmWrapper","Text","_templateObject7","InputContainer","_templateObject8","Label","_templateObject9","Input","_templateObject10","SubmitBtn","_templateObject11","Error","_templateObject12","Yup","shape","avatar","test","value","size","required","name","email","birthday","matches","max","Date","phone","city","_ref","disabled","setIsFormDisabled","_useState","useState","_useState2","_slicedToArray","showConfirm","setShowConfirm","_useState3","_useState4","errorsVisible","setErrorsVisible","formikProps","useFormik","initialValues","validationSchema","onSubmit","values","Object","keys","errors","length","formData","FormData","key","append","concat","prevState","useEffect","_jsx","_Fragment","children","handleSubmit","_jsxs","src","style","marginTop","htmlFor","Camera","type","id","accept","onChange","event","file","target","files","setFieldValue","Check","className","Cross","placeholder","handleChange","error","touched","isFormDisabled","onClick","Edit","UserForm","LogoutBtn","PetsListStyled","PetsList","UserData","width","to","PlusSmall","PetsData"],"sourceRoot":""}