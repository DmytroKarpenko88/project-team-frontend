{"version":3,"file":"static/js/516.f71801f1.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx","utils/shemas/AuthSchema.jsx"],"sourcesContent":["import {styled} from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { ErrorMessage, Field} from 'formik';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { theme } from 'styles';\n\nexport const MainLogForm = styled.div`\nposition: relative;\nmargin: 0 auto;\npadding:  40px 12px;\ntext-align: center;\njustify-content: center;\nbackground-color: ${theme.colors.white};\nborder-radius: 20px;\nwidth: 280px;\nheight: 425px;\nbox-shadow: 7px 10px 14px rgba(63, 143, 248, 0.11);\nz-index: 0;\n@media (min-width: 768px) {\n    padding:  60px 75px;\n    width: 608px;\n    height: 481px;\n    border-radius: 40px;\n    /* z-index: 99; */\n  }\n@media screen and (min-width: 1281px) {\n    height: 481px;\n  }\n`;\n\nexport const Titel = styled.h1`\nfont-size: ${theme.fontSizes.xl};\nfont-family: ${theme.fonts.main.medium};\nmargin-bottom: 20px;\n@media (min-width: 768px) {\n    font-size: ${theme.fontSizes.xxl};\n    margin-bottom: 40px;\n}\n@media screen and (min-width: 1281px) {\n  }\n`;\n\nexport const FormField = styled.div`\nposition: relative;\n`;\n\nexport const InputForm = styled(Field)`\npadding: 12px 16px;\nwidth: 100%;\nheight: 48px;\nfont-size: ${theme.fontSizes.m};\nfont-family: ${theme.fonts.main.regular};\nmargin-bottom: 14px;\nborder: solid 1px ${theme.colors.blue};\nborder-radius: 40px;\n@media (min-width: 768px) {\n    font-size: ${theme.fontSizes.m};\n    margin-bottom: 32px;\n};\n@media screen and (min-width: 1281px) {\n  };\n`;\n\nexport const ErrorMess = styled(ErrorMessage)`\nposition: absolute;\nfont-size: 10px;\ncolor: ${theme.colors.red};\nleft: 10px;\ntop: 47px;\n@media (min-width: 768px) {\n    font-size: 12px;\n}\n`;\n\nexport const OnIcon = styled(VisibilityIcon)`\nposition: absolute;\ncolor: ${theme.colors.blue};\ntop: 12px;\nleft:218px;\n@media screen and (min-width: 768px) {\n  top: 12px;\n    left:420px;\n  };\n@media screen and (min-width: 1281px) {\n  };\n`;\n\nexport const OffIcon = styled(VisibilityOffIcon)`\nposition: absolute;\ncolor: ${theme.colors.blue};\ntop: 12px;\nleft:218px;\n@media screen and (min-width: 768px) {\n  top: 12px;\n    left:420px;\n  };\n@media screen and (min-width: 1281px) {\n  };\n`;\n\nexport const Button = styled.button`\nwidth: 100%;\nheight: 48px;\nmargin-top: 96px;\nmargin-bottom: 8px;\nfont-size: ${theme.fontSizes.l};\ncolor: ${theme.colors.white};\nborder-radius: 40px;\nbackground-color: ${theme.colors.blue};\n@media screen and (min-width: 768px) {\n    margin-top: 28px;\n    margin-bottom: 20px;\n    font-family: ${theme.fonts.main.semiBold};\n  };\n@media screen and (min-width: 1281px) {\n  };\n`;\n\nexport const ToRegister = styled.p`\ncolor: ${theme.colors.grey};\nfont-size: ${theme.fontSizes.xs};\nfont-family: ${theme.fonts.main.regular};\n`;\n\nexport const LinkStyled = styled(NavLink)`\ncolor: ${theme.colors.blue};\nfont-size: ${theme.fontSizes.xs};\nfont-family: ${theme.fonts.main.regular};\nmargin-left: 4px;\ntext-decoration: underline;\n`;","import { useState, useEffect } from 'react';\nimport { Form, Formik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { loginSchema } from 'utils/shemas/AuthSchema';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from 'redux/auth/auth-operations';\nimport { selectIsLoggedIn } from 'redux/auth/auth-selectors';\n\nimport {\n  MainLogForm,\n  Titel,\n  FormField,\n  InputForm,\n  ErrorMess,\n  Button,\n  ToRegister,\n  LinkStyled,\n  OnIcon,\n  OffIcon,\n} from './LoginForm.styled';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport default function LoginForm() {\n  const [passwordShow, setPasswordShow] = useState(false);\n  const togglePassword = () => setPasswordShow(prevState => !prevState);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const data = {\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(login(data));\n    resetForm();\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/user');\n    }\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <MainLogForm>\n      <Formik\n        validationSchema={loginSchema}\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form>\n            <Titel>Login</Titel>\n            <FormField>\n              <InputForm\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                autoComplete=\"on\"\n              />\n              <ErrorMess name=\"email\" component=\"p\" />\n            </FormField>\n\n            <FormField>\n              <InputForm\n                name=\"password\"\n                type={passwordShow ? 'text' : 'password'}\n                placeholder=\"Password\"\n                autoComplete=\"on\"\n              />\n              <span id=\"visibilityBtn\" onClick={togglePassword}>\n                {passwordShow ? <OnIcon /> : <OffIcon />}\n              </span>\n              <ErrorMess name=\"password\" component=\"p\" />\n            </FormField>\n            <div>\n              <Button type=\"submit\">Login</Button>\n            </div>\n\n            <ToRegister>\n              Don't have an account?\n              <LinkStyled to=\"/register\">Register</LinkStyled>\n            </ToRegister>\n          </Form>\n        )}\n      </Formik>\n    </MainLogForm>\n  );\n}\n","import { styled } from 'styled-components';\nimport imageBgMob1 from '../../images/background/bg-mobile@1x.png';\n// import imageBgMob2 from '../../images/background/bg-mobile@2x.png'\nimport imageBgTab1 from '../../images/background/bg-tablet@1x.png';\n// import imageBgTab2 from '../../images/background/bg-tablet@2x.png'\nimport imageBgDesc1 from '../../images/background/bg-desktop@1x.png';\n// import imageBgDesc2 from '../../images/background/bg-desktop@2x.png'\n\n// import { theme } from 'styles';\n\nexport const LoginContainer = styled.main`\n  margin: 0 auto;\n  padding: 40px 20px 88px 20px;\n  width: 320px;\n  background-image: url(${imageBgMob1});\n  /* background-color: rgb(254, 249, 249); */\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 80px 80px 395px 80px;\n    background-image: url(${imageBgTab1});\n  }\n  @media screen and (min-width: 1281px) {\n    width: 1280px;\n    padding: 80px 16px 141px 16px;\n    background-image: url(${imageBgDesc1});\n  }\n`;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport { LoginContainer } from './LoginPage.styled';\n\nexport default function LoginPage() {\n  return (\n    <LoginContainer>\n      <LoginForm />\n    </LoginContainer>\n  );\n}\n","import * as Yup from 'yup';\n\nconst emailReq =\n  // eslint-disable-next-line no-useless-escape\n  /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\nconst passwordReq =\n  // eslint-disable-next-line no-useless-escape\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/;\n\nexport const loginSchema = Yup.object({\n  email: Yup.string()\n    .required('Email field is required!')\n    .min(10)\n    .max(63)\n    .matches(emailReq, 'Invalid email format'),\n\n  password: Yup.string()\n    .required('Password field is required!')\n    .min(6, 'Password is too short. The minimum 6 symbols')\n    .max(16, 'Password is too long. The maximum 16 symbols'),\n});\n\nexport const registerSchema = Yup.object({\n  name: Yup.string()\n    .required('Name field is required!')\n    .min(2, 'Name is too short')\n    .matches(/^[A-Za-z-\\s]+$/, 'Name field can contain only latin letters'),\n\n  email: Yup.string()\n    .required('Email field is required!')\n    .min(10)\n    .max(20)\n    .matches(emailReq, 'Invalid email format'),\n\n  password: Yup.string()\n    .required('Password is required!')\n    .min(6, 'Password is too short. The minimum 6 symbols')\n    .max(16, 'Password is too long. The maximum 16 symbols')\n    .matches(\n      passwordReq,\n      'The must contain 6 characters, 1 uppercase, numbers, 1 special case character'\n    ),\n\n  confirmPassword: Yup.string()\n    .required('Password confirmation is required!')\n    .oneOf([Yup.ref('password'), ''], 'Password confirmation must match'),\n});\n"],"names":["MainLogForm","styled","_templateObject","_taggedTemplateLiteral","theme","Titel","_templateObject2","FormField","_templateObject3","InputForm","Field","_templateObject4","ErrorMess","ErrorMessage","_templateObject5","OnIcon","VisibilityIcon","_templateObject6","OffIcon","VisibilityOffIcon","_templateObject7","Button","_templateObject8","ToRegister","_templateObject9","LinkStyled","NavLink","_templateObject10","initialValues","email","password","LoginForm","_useState","useState","_useState2","_slicedToArray","passwordShow","setPasswordShow","togglePassword","prevState","isLoggedIn","useSelector","selectIsLoggedIn","dispatch","useDispatch","navigate","useNavigate","useEffect","_jsx","children","Formik","validationSchema","loginSchema","onSubmit","values","_ref","resetForm","data","login","_jsxs","Form","name","type","placeholder","autoComplete","component","id","onClick","to","LoginContainer","imageBgMob1","imageBgTab1","imageBgDesc1","LoginPage","emailReq","Yup","required","min","max","matches","registerSchema","confirmPassword","oneOf"],"sourceRoot":""}