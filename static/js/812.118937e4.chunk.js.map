{"version":3,"file":"static/js/812.118937e4.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.jsx","components/AuthForm/AuthForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx","utils/shemas/AuthSchema.jsx"],"sourcesContent":["import {styled} from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { ErrorMessage, Field  } from 'formik';\nimport { theme } from 'styles';\n\nexport const FormContainer = styled.div`\n/* position: relative; */\nmargin: 0 auto;\npadding:  40px 12px;\ntext-align: center;\njustify-content: center;\nbackground-color: ${theme.colors.white};\nborder-radius: 20px;\nwidth: 280px;\nheight: 479px;\nbox-shadow: 7px 10px 14px rgba(63, 143, 248, 0.11);\n/* z-index: 99; */\n@media (min-width: 768px) {\n    padding:  60px 75px;\n    width: 608px;\n    height: 629px;\n    border-radius: 40px;\n    /* z-index: 99; */\n  }\n@media screen and (min-width: 1281px) {\n    height: 617px;\n  }\n`;\n\nexport const Titel = styled.h1`\nfont-size: ${theme.fontSizes.xl};\nfont-family: ${theme.fonts.main.medium};\nmargin-bottom: 20px;\n@media (min-width: 768px) {\n    font-size: ${theme.fontSizes.xxl};\n    margin-bottom: 40px;\n}\n`;\n\nexport const FormField = styled.div`\nposition: relative;\n`;\n\nexport const InputForm = styled(Field)`\npadding: 12px 16px;\nwidth: 100%;\nheight: 48px;\nfont-size: ${theme.fontSizes.m};\nfont-family: ${theme.fonts.main.regular};\nmargin-bottom: 14px;\nborder: solid 1px ${theme.colors.blue};\nborder-radius: 40px;\n@media (min-width: 768px) {\n    font-size: ${theme.fontSizes.m};\n    margin-bottom: 32px;\n}\n`;\n  \nexport const ErrorMess = styled(ErrorMessage)`\nposition: absolute;\nfont-size: 10px;\ncolor: ${theme.colors.red};\nleft: 10px;\ntop: 47px;\n@media (min-width: 768px) {\n    font-size: 12px;\n};\n`;\n\nexport const SuccessMessage = styled.p`\nposition: absolute;\nfont-size: 10px;\ncolor: ${theme.colors.green};\nleft: 10px;\ntop: 47px;\n@media (min-width: 768px) {\n    font-size: 12px;\n};\n`;\n\nexport const OnIconPass = styled(VisibilityIcon)`\nposition: absolute;\ncolor: ${theme.colors.blue};\ntop: 12px;\nleft:218px;\n@media (min-width: 768px) {\n    top: 12px;\n    left:420px; \n}\n`;\n\nexport const OffIconPass = styled(VisibilityOffIcon)`\nposition: absolute;\ncolor: ${theme.colors.blue};\ntop: 12px;\nleft:218px;\n@media (min-width: 768px) {\n    top: 12px;\n    left:420px; \n}\n`;\n\nexport const OnIconConPass = styled(VisibilityIcon)`\nposition: absolute;\ncolor: ${theme.colors.blue};\ntop: 12px;\nleft:218px;\n@media (min-width: 768px) {\n    top: 12px;\n    left:420px;\n}\n`;\n\nexport const OffIconConPass = styled(VisibilityOffIcon)`\nposition: absolute;\ncolor: ${theme.colors.blue};\ntop: 12px;\nleft:218px;\n@media (min-width: 768px) {\n    top: 12px;\n    left:420px;\n}\n`;\n\nexport const Button = styled.button`\nwidth: 100%;\nheight: 48px;\nmargin-top: 26px;\nmargin-bottom: 8px;\nfont-size: ${theme.fontSizes.l};\ncolor: ${theme.colors.white};\nborder-radius: 40px;\nbackground-color: ${theme.colors.blue};\n&:hover {\n    background-color: ${theme.colors.grBlue};\n};\n@media (min-width: 768px) {\n    margin-top: 30px;\n    margin-bottom: 16px;\nfont-family: ${theme.fonts.main.semiBold};\n}\n@media screen and (min-width: 1281px) {\n    margin-top: 8px;\n  }\n`;\n\nexport const ToLogin = styled.p`\ncolor: ${theme.colors.grey};\nfont-size: ${theme.fontSizes.xs};\nfont-family: ${theme.fonts.main.regular};\n`;\n\nexport const LinkStyled = styled(NavLink)`\ncolor: ${theme.colors.blue};\nfont-size: ${theme.fontSizes.xs};\nfont-family: ${theme.fonts.main.regular};\nmargin-left: 4px;\ntext-decoration: underline;\n`;","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { registerSchema } from 'utils/shemas/AuthSchema';\nimport { register } from '../../redux/auth/auth-operations';\nimport { useAuth } from 'hooks/useAuth';\nimport {\n  FormContainer,\n  Titel,\n  FormField,\n  InputForm,\n  ErrorMess,\n  SuccessMessage,\n  Button,\n  LinkStyled,\n  ToLogin,\n  OnIconPass,\n  OffIconPass,\n  OnIconConPass,\n  OffIconConPass,\n} from './AuthForm.styled';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport default function AuthForm() {\n  const [passwordShow, setPasswordShow] = useState(false);\n  const [confirmPasswordShow, setConfirmPasswordShow] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {isRegistered} = useAuth();\n\n  const togglePassword = () => setPasswordShow(prevState => !prevState);\n  const toggleConfirmPassword = () => setConfirmPasswordShow(prevState => !prevState);\n\n  const handleSubmit =  (values, { resetForm }) => {\n    const data = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(register(data));\n    resetForm()\n  };\n\n  useEffect(() => {\n    if (isRegistered) {\n      navigate('/user');\n    }\n  }, [isRegistered, navigate]);\n\n\n  return (\n    <FormContainer>\n      <Formik\n        validationSchema={registerSchema}\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n      >\n        {({errors, touched}) => (\n          <Form>\n            <Titel>Registration</Titel>\n            <FormField >\n              <InputForm\n                name=\"name\"\n                type=\"name\"\n                placeholder=\"Name\"\n                autoComplete=\"on\"\n              />\n              { !errors.name && touched.name ? (<SuccessMessage>Success name is valid!</SuccessMessage>) : null }\n            <ErrorMess name=\"name\" component=\"p\" />\n            </FormField>\n            <FormField>\n              <InputForm\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                autoComplete=\"on\"\n              />\n              { !errors.email && touched.email ? (<SuccessMessage>Success email is valid!</SuccessMessage>) : null }\n              <ErrorMess name=\"email\" component=\"p\" />\n            </FormField>\n            <FormField>\n              <InputForm\n                name=\"password\"\n                type={passwordShow ? 'text' : 'password'}\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n              />\n              <span id=\"visibilityBtn\" onClick={togglePassword}>\n                {passwordShow ? <OnIconPass /> : <OffIconPass />}\n              </span>\n              { !errors.password && touched.password? (<SuccessMessage>Success password is valid!</SuccessMessage>) : null }\n              <ErrorMess name=\"password\" component=\"p\" />\n            </FormField>\n\n            <FormField>\n              <InputForm\n                name=\"confirmPassword\"\n                type={confirmPasswordShow ? 'text' : 'password'}\n                placeholder=\"Confirm password\"\n                autoComplete=\"off\"\n              />\n              <span id=\"visibilityBtn\" onClick={toggleConfirmPassword}>\n                {confirmPasswordShow ? <OnIconConPass /> : <OffIconConPass />}\n              </span>\n              { !errors.confirmPassword && touched.confirmPassword ? (<SuccessMessage>Success confirm password is valid!</SuccessMessage>) : null }\n              <ErrorMess name=\"confirmPassword\" component=\"p\" />\n            </FormField>\n\n            <div>\n              <Button type=\"submit\">Registration</Button>\n            </div>\n\n            <ToLogin>\n              Already have an account?\n              <LinkStyled to=\"/login\">Login</LinkStyled>\n            </ToLogin>\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n}\n","import { styled } from 'styled-components';\n// import { theme } from 'styles';\nimport imageBgMob1 from '../../images/background/bg-mobile@1x.png';\n// import imageBgMob2 from '../../images/background/bg-mobile@2x.png'\nimport imageBgTab1 from '../../images/background/bg-tablet@1x.png';\n// import imageBgTab2 from '../../images/background/bg-tablet@2x.png'\nimport imageBgDesc1 from '../../images/background/bg-desktop@1x.png';\n// import imageBgDesc2 from '../../images/background/bg-desktop@2x.png'\n\nexport const RegisterContainer = styled.main`\n  margin: 0 auto;\n  padding: 40px 20px 34px 20px;\n  width: 320px;\n  background-image: url(${imageBgMob1});\n  /* background-color: rgb(254, 249, 249); */\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 80px 80px 159px 80px;\n    background-image: url(${imageBgTab1});\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding: 80px 16px 75px 16px;\n    background-image: url(${imageBgDesc1});\n  }\n`;\n","import AuthForm from 'components/AuthForm/AuthForm';\nimport { RegisterContainer } from './RegisterPage.styled';\n\nexport default function RegisterPage() {\n  return (\n    <RegisterContainer>\n      <AuthForm />\n    </RegisterContainer>\n  );\n}\n","import * as Yup from 'yup';\n\nconst emailReq =\n  // eslint-disable-next-line no-useless-escape\n  /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\nconst passwordReq =\n  // eslint-disable-next-line no-useless-escape\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/;\n\nexport const loginSchema = Yup.object({\n  email: Yup.string()\n    .required('Email field is required!')\n    .min(10)\n    .max(63)\n    .matches(emailReq, 'Invalid email format'),\n\n  password: Yup.string()\n    .required('Password field is required!')\n    .min(6, 'Password is too short. The minimum 6 symbols')\n    .max(16, 'Password is too long. The maximum 16 symbols'),\n});\n\nexport const registerSchema = Yup.object({\n  name: Yup.string()\n    .required('Name field is required!')\n    .min(2, 'Name is too short')\n    .matches(/^[A-Za-z-\\s]+$/, 'Name field can contain only latin letters'),\n\n  email: Yup.string()\n    .required('Email field is required!')\n    .min(10)\n    .max(20)\n    .matches(emailReq, 'Invalid email format'),\n\n  password: Yup.string()\n    .required('Password is required!')\n    .min(6, 'Password is too short. The minimum 6 symbols')\n    .max(16, 'Password is too long. The maximum 16 symbols')\n    .matches(\n      passwordReq,\n      'The must contain 6 characters, 1 uppercase, numbers, 1 special case character'\n    ),\n\n  confirmPassword: Yup.string()\n    .required('Password confirmation is required!')\n    .oneOf([Yup.ref('password'), ''], 'Password confirmation must match'),\n});\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","theme","Titel","_templateObject2","FormField","_templateObject3","InputForm","Field","_templateObject4","ErrorMess","ErrorMessage","_templateObject5","SuccessMessage","_templateObject6","OnIconPass","VisibilityIcon","_templateObject7","OffIconPass","VisibilityOffIcon","_templateObject8","OnIconConPass","_templateObject9","OffIconConPass","_templateObject10","Button","_templateObject11","ToLogin","_templateObject12","LinkStyled","NavLink","_templateObject13","initialValues","name","email","password","confirmPassword","AuthForm","_useState","useState","_useState2","_slicedToArray","passwordShow","setPasswordShow","_useState3","_useState4","confirmPasswordShow","setConfirmPasswordShow","dispatch","useDispatch","navigate","useNavigate","isRegistered","useAuth","togglePassword","prevState","toggleConfirmPassword","useEffect","_jsx","children","Formik","validationSchema","registerSchema","onSubmit","values","_ref","resetForm","data","register","_ref2","errors","touched","_jsxs","Form","type","placeholder","autoComplete","component","id","onClick","to","RegisterContainer","imageBgMob1","imageBgTab1","imageBgDesc1","RegisterPage","emailReq","loginSchema","Yup","required","min","max","matches","oneOf"],"sourceRoot":""}