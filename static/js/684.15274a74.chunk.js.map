{"version":3,"file":"static/js/684.15274a74.chunk.js","mappings":"6PAGaA,EAAaC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yCAEvBC,EAAAA,EAAAA,OAAAA,KAIDC,EAAMJ,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qHAEfC,EAAAA,EAAAA,OAAAA,OAIEA,EAAAA,EAAAA,OAAAA,K,kBCuEhB,EAlDiB,WACf,IAAAG,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9B,OACEI,EAAAA,EAAAA,MAACR,EAAG,CAAAS,SAAA,EACFC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,KACJD,EAAAA,EAAAA,KAACE,EAAAA,GAAI,KACLF,EAAAA,EAAAA,KAACG,EAAAA,GAAS,KACVH,EAAAA,EAAAA,KAACI,EAAAA,GAAK,KACNJ,EAAAA,EAAAA,KAACK,EAAAA,GAAK,KACNL,EAAAA,EAAAA,KAACM,EAAAA,GAAM,KACPN,EAAAA,EAAAA,KAACO,EAAAA,GAAK,KACNP,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,YAAWT,UACzBC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,OAGPT,EAAAA,EAAAA,KAACU,EAAAA,GAAI,KACLV,EAAAA,EAAAA,KAACW,EAAAA,GAAK,KACNX,EAAAA,EAAAA,KAACY,EAAAA,GAAM,KACPZ,EAAAA,EAAAA,KAACa,EAAAA,GAAM,KACPb,EAAAA,EAAAA,KAACc,EAAAA,GAAS,KAEVd,EAAAA,EAAAA,KAACe,EAAAA,GAAK,KACNf,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,KACLhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,KACPjB,EAAAA,EAAAA,KAACkB,EAAAA,GAAQ,KACTlB,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,KACNnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAa,KACdpB,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,KACRrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAW,KACZtB,EAAAA,EAAAA,KAACuB,EAAAA,GAAS,KACVvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAU,KACXxB,EAAAA,EAAAA,KAACyB,EAAAA,GAAK,KAENzB,EAAAA,EAAAA,KAACf,EAAU,CAAAc,UACTC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAU,OAGb1B,EAAAA,EAAAA,KAAC2B,EAAAA,GAAO,KACR3B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAQ,KAET5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAAS,kBAAMlC,GAAa,EAAK,EAACE,SAAC,gBAI7DC,EAAAA,EAAAA,KAACgC,EAAAA,EAAkB,CAACC,KAAMrC,EAAWsC,OAAQ,kBAAMrC,GAAa,EAAM,MAG5E,C","sources":["pages/IconPage.styled.jsx","pages/IconPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { theme } from 'styles';\n\nexport const SpanStyled = styled.span`\n  svg {\n    stroke: ${theme.colors.red};\n  }\n`;\n\nexport const Box = styled.div`\n  .user-icon svg {\n    stroke: ${theme.colors.yellow};\n  }\n  .user-icon:hover {\n    svg {\n      stroke: ${theme.colors.red};\n    }\n  }\n`;\n","import {\n  ArrowLeft,\n  Camera,\n  Check,\n  CheckRound,\n  ChevronDown,\n  ChevronUp,\n  Clock,\n  Cross,\n  CrossSmall,\n  Edit,\n  EyeClose,\n  EyeOpen,\n  Female,\n  Filer,\n  Filter2,\n  Heart,\n  Location,\n  Logout,\n  Male,\n  MenuHamburger,\n  Paw,\n  Plus,\n  PlusSmall,\n  Round,\n  Search,\n  Trash,\n  User,\n} from 'components/icons';\nimport Button from 'react-bootstrap/Button';\n// import Modal from 'react-bootstrap/Modal';\n\nimport React, { useState } from 'react';\nimport { Box, SpanStyled } from './IconPage.styled';\nimport ModalApproveAction from 'components/ModalApproveAction/ModalApproveAction';\n\nconst IconPage = () => {\n  const [modalShow, setModalShow] = useState(false);\n  return (\n    <Box>\n      <h1>IconPage</h1>\n      <Paw />\n      <Plus />\n      <PlusSmall />\n      <Cross />\n      <Trash />\n      <Search />\n      <Heart />\n      <span className=\"user-icon\">\n        <User />\n      </span>\n\n      <Edit />\n      <Check />\n      <Camera />\n      <Logout />\n      <ArrowLeft />\n\n      <Filer />\n      <Male />\n      <Female />\n      <Location />\n      <Clock />\n      <MenuHamburger />\n      <Filter2 />\n      <ChevronDown />\n      <ChevronUp />\n      <CheckRound />\n      <Round />\n\n      <SpanStyled>\n        <CrossSmall />\n      </SpanStyled>\n\n      <EyeOpen />\n      <EyeClose />\n\n      <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n        Open modal\n      </Button>\n\n      <ModalApproveAction show={modalShow} onHide={() => setModalShow(false)} />\n    </Box>\n  );\n};\n\nexport default IconPage;\n"],"names":["SpanStyled","styled","_templateObject","_taggedTemplateLiteral","theme","Box","_templateObject2","_useState","useState","_useState2","_slicedToArray","modalShow","setModalShow","_jsxs","children","_jsx","Paw","Plus","PlusSmall","Cross","Trash","Search","Heart","className","User","Edit","Check","Camera","Logout","ArrowLeft","Filer","Male","Female","Location","Clock","MenuHamburger","Filter2","ChevronDown","ChevronUp","CheckRound","Round","CrossSmall","EyeOpen","EyeClose","Button","variant","onClick","ModalApproveAction","show","onHide"],"sourceRoot":""}