{"version":3,"file":"static/js/812.ad9baac3.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.jsx","components/AuthForm/AuthForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx","utils/shemas/AuthSchema.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { ErrorMessage, Field } from 'formik';\nimport { theme } from 'styles';\n\nexport const FormContainer = styled.div`\n  /* position: relative; */\n  margin: 0 auto;\n  padding: 40px 12px;\n  text-align: center;\n  justify-content: center;\n  background-color: ${theme.colors.white};\n  border-radius: 20px;\n  width: 280px;\n  height: 479px;\n  box-shadow: 7px 10px 14px rgba(63, 143, 248, 0.11);\n  @media (min-width: 768px) {\n    padding: 60px 75px;\n    width: 608px;\n    height: 629px;\n    border-radius: 40px;\n  }\n  @media screen and (min-width: 1281px) {\n    height: 617px;\n  }\n`;\n\nexport const Titel = styled.h1`\n  font-size: ${theme.fontSizes.xl};\n  font-family: ${theme.fonts.main.medium};\n  margin-bottom: 20px;\n  @media (min-width: 768px) {\n    font-size: ${theme.fontSizes.xxl};\n    margin-bottom: 40px;\n  }\n`;\n\nexport const FormField = styled.div`\n  position: relative;\n`;\n\nexport const InputNameWraper = styled.div`\n  margin-bottom: 14px;\n  border-radius: 40px;\n  border: 1px solid;\n  @media (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const InputEmailWraper = styled.div`\n  margin-bottom: 14px;\n  border-radius: 40px;\n  border: 1px solid;\n  @media (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const InputPasswordWraper = styled.div`\n  margin-bottom: 14px;\n  border-radius: 40px;\n  border: 1px solid;\n  @media (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const InputConfirmPasswordWraper = styled.div`\n  margin-bottom: 14px;\n  border-radius: 40px;\n  border: 1px solid;\n  @media (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const InputForm = styled(Field)`\n  padding: 12px 16px;\n  width: 100%;\n  height: 48px;\n  font-size: ${theme.fontSizes.m};\n  font-family: ${theme.fonts.main.regular};\n  border-radius: 40px;\n  border: none;\n\n  @media (min-width: 768px) {\n    font-size: ${theme.fontSizes.m};\n  }\n`;\n\nexport const ErrorMess = styled(ErrorMessage)`\n  position: absolute;\n  font-size: 10px;\n  color: ${theme.colors.red};\n  left: 10px;\n  top: 47px;\n\n  @media (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nexport const SuccessMessage = styled.p`\n  position: absolute;\n  font-size: 10px;\n  color: ${theme.colors.green};\n  left: 10px;\n  top: 47px;\n\n  @media (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nexport const IconWraper = styled.div`\ndisplay: flex;\nposition: absolute;\njustify-content: end;\nwidth: 54px;\ntop: 12px;\nleft: 187px;\n@media (min-width: 768px) {\n  width: 60px;\n    top: 12px;\n    left: 383px;\n  }\n`;\n\nexport const IconCheck = styled.span`\nmargin-right: auto;\n/* position: absolute; */\n/* top: 12px;\nleft: 220px; */\nsvg {stroke: ${theme.colors.green};}\n@media (min-width: 768px) {\n    top: 12px;\n    left: 420px;\n  }\n`;\n\nexport const IconCross = styled.span`\nmargin-right: auto;\n/* position: absolute; */\n/* top: 12px;\nleft: 220px; */\nsvg {stroke: ${theme.colors.red};}\n@media (min-width: 768px) {\n    top: 12px;\n    left: 420px;\n  }\n`;\n\n\nexport const OnIconPass = styled(VisibilityIcon)`\n  /* position: absolute; */\n  color: ${theme.colors.blue};\n  /* top: 12px;\n  left: 218px; */\n  @media (min-width: 768px) {\n    top: 12px;\n    left: 420px;\n  }\n`;\n\nexport const OffIconPass = styled(VisibilityOffIcon)`\n  /* position: absolute; */\n  color: ${theme.colors.blue};\n  /* margin-right: 15px; */\n  /* top: 12px;\n  left: 218px; */\n  @media (min-width: 768px) {\n    top: 12px;\n    left: 420px;\n  }\n`;\n\nexport const OnIconConPass = styled(VisibilityIcon)`\n  /* position: absolute; */\n  color: ${theme.colors.blue};\n  /* top: 12px;\n  left: 218px; */\n  @media (min-width: 768px) {\n    top: 12px;\n    left: 420px;\n  }\n`;\n\nexport const OffIconConPass = styled(VisibilityOffIcon)`\n  /* position: absolute; */\n  color: ${theme.colors.blue};\n  /* top: 12px;\n  left: 218px; */\n  @media (min-width: 768px) {\n    top: 12px;\n    left: 420px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  height: 48px;\n  margin-top: 26px;\n  margin-bottom: 8px;\n  font-size: ${theme.fontSizes.l};\n  color: ${theme.colors.white};\n  border-radius: 40px;\n  background-color: ${theme.colors.blue};\n  &:hover {\n    background-color: ${theme.colors.grBlue};\n  }\n  @media (min-width: 768px) {\n    margin-top: 30px;\n    margin-bottom: 16px;\n    font-family: ${theme.fonts.main.semiBold};\n  }\n  @media screen and (min-width: 1281px) {\n    margin-top: 8px;\n  }\n`;\n\nexport const ToLogin = styled.p`\n  color: ${theme.colors.grey};\n  font-size: ${theme.fontSizes.xs};\n  font-family: ${theme.fonts.main.regular};\n`;\n\nexport const LinkStyled = styled(NavLink)`\n  color: ${theme.colors.blue};\n  font-size: ${theme.fontSizes.xs};\n  font-family: ${theme.fonts.main.regular};\n  margin-left: 4px;\n  text-decoration: underline;\n`;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { registerSchema } from 'utils/shemas/AuthSchema';\nimport { register } from '../../redux/auth/auth-operations';\nimport { useAuth } from 'hooks/useAuth';\nimport {\n  FormContainer,\n  Titel,\n  FormField,\n  InputNameWraper,\n  InputEmailWraper,\n  InputPasswordWraper,\n  // InputConfirmPasswordWraper,\n  InputForm,\n  // IconInput,\n  IconWraper,\n  IconCheck,\n  IconCross,\n  ErrorMess,\n  SuccessMessage,\n  Button,\n  LinkStyled,\n  ToLogin,\n  OnIconPass,\n  OffIconPass,\n  OnIconConPass,\n  OffIconConPass,\n} from './AuthForm.styled';\nimport { theme } from 'styles';\nimport { Check, Cross } from 'components/icons';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport default function AuthForm() {\n  const [passwordShow, setPasswordShow] = useState(false);\n  const [confirmPasswordShow, setConfirmPasswordShow] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isRegistered } = useAuth();\n\n  const togglePassword = () => setPasswordShow(prevState => !prevState);\n  const toggleConfirmPassword = () =>\n    setConfirmPasswordShow(prevState => !prevState);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const data = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(register(data));\n    resetForm();\n  };\n\n  useEffect(() => {\n    if (isRegistered) {\n      navigate('/user');\n    }\n  }, [isRegistered, navigate]);\n\n  return (\n    <FormContainer>\n      <Formik\n        validationSchema={registerSchema}\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n      >\n        {({values ,errors, touched, resetForm }) => (\n          <Form>\n            <Titel>Registration</Titel>\n            <FormField>\n              <InputNameWraper\n                style={{\n                  borderColor: !touched.name\n                    ? `${theme.colors.blue}`\n                    : errors.name\n                    ? `${theme.colors.red}`\n                    : `${theme.colors.green}`,\n                }}\n              >\n                <InputForm\n                  name=\"name\"\n                  type=\"name\"\n                  placeholder=\"Name\"\n                  autoComplete=\"on\"\n                />\n              </InputNameWraper>\n              {!errors.name && touched.name ? (\n                <SuccessMessage>Success, name is valid!</SuccessMessage>\n              ) : null}\n\n             <IconWraper >\n              { !touched.name ? null : !errors.name ? \n              <IconCheck style={{marginLeft: \"36px\"}}><Check/></IconCheck> :\n               <IconCross style={{marginLeft: \"36px\"}} id=\"resetBtn\" onClick={()=>{resetForm({ values: { ...values.name, name: '' } })}}><Cross/></IconCross>}\n             </IconWraper>\n             \n              <ErrorMess name=\"name\" component=\"p\" />\n            </FormField>\n\n            <FormField>\n              <InputEmailWraper\n                style={{\n                  borderColor: !touched.email\n                    ? `${theme.colors.blue}`\n                    : errors.email\n                    ? `${theme.colors.red}`\n                    : `${theme.colors.green}`,\n                }}\n              >\n                <InputForm\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  autoComplete=\"on\"\n                />\n              </InputEmailWraper>\n              {!errors.email && touched.email ? (\n                <SuccessMessage>Success, email is valid!</SuccessMessage>\n              ) : null}\n\n             <IconWraper>\n              { !touched.email ? null : !errors.email ? \n              <IconCheck style={{marginLeft: \"36px\"}}><Check/></IconCheck> :\n               <IconCross style={{marginLeft: \"36px\"}} id=\"resetBtn\" onClick={()=>{resetForm({ values: { ...values.email, email: '' } })}}><Cross/></IconCross>}\n             </IconWraper>\n\n              <ErrorMess name=\"email\" component=\"p\" ></ErrorMess>\n            </FormField>\n\n            <FormField>\n              <InputPasswordWraper\n                style={{\n                  borderColor: !touched.password\n                    ? `${theme.colors.blue}`\n                    : errors.password\n                    ? `${theme.colors.red}`\n                    : `${theme.colors.green}`,\n                }}\n              >\n                <InputForm\n                  name=\"password\"\n                  type={passwordShow ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  autoComplete=\"off\"\n                />\n              </InputPasswordWraper>\n\n              <IconWraper>\n              { !touched.password ? null : !errors.password ? \n              <IconCheck ><Check/></IconCheck> :\n               <IconCross id=\"resetBtn\" onClick={()=>{resetForm({ values: { ...values.password, password: '' } })}}><Cross/></IconCross>}\n\n              <span id=\"visibilityBtn\" onClick={togglePassword}>\n                {passwordShow ? <OnIconPass /> : <OffIconPass />}\n              </span>\n              </IconWraper>\n\n              {!errors.password && touched.password ? (\n                <SuccessMessage>Success, password is valid!</SuccessMessage>\n              ) : null}\n\n              <ErrorMess name=\"password\" component=\"p\" />\n            </FormField>\n\n            <FormField>\n              <InputPasswordWraper\n                style={{\n                  borderColor: !touched.confirmPassword\n                    ? `${theme.colors.blue}`\n                    : errors.confirmPassword\n                    ? `${theme.colors.red}`\n                    : `${theme.colors.green}`,\n                }}\n              >\n                <InputForm\n                  name=\"confirmPassword\"\n                  type={confirmPasswordShow ? 'text' : 'password'}\n                  placeholder=\"Confirm password\"\n                  autoComplete=\"off\"\n                />\n              </InputPasswordWraper>\n              \n              <IconWraper>\n              { !touched.confirmPassword ? null : !errors.confirmPassword ? \n              <IconCheck ><Check/></IconCheck> :\n               <IconCross id=\"resetBtn\" onClick={()=>{resetForm({ values: { ...values.confirmPassword, confirmPassword: '' } })}}><Cross/></IconCross>}\n\n              <span id=\"visibilityBtn\" onClick={toggleConfirmPassword}>\n                {confirmPasswordShow ? <OnIconConPass /> : <OffIconConPass />}\n              </span>\n              </IconWraper>\n\n                {!errors.confirmPassword && touched.confirmPassword ? (\n                <SuccessMessage>\n                  Success, confirm password is valid!\n                </SuccessMessage>\n              ) : null}\n\n              <ErrorMess name=\"confirmPassword\" component=\"p\" />\n            </FormField>\n\n            <div>\n              <Button type=\"submit\">Registration</Button>\n            </div>\n\n            <ToLogin>\n              Already have an account?\n              <LinkStyled to=\"/login\">Login</LinkStyled>\n            </ToLogin>\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n}\n","import { styled } from 'styled-components';\n\n\nexport const RegisterContainer = styled.main`\n  margin: 0 auto;\n  padding: 40px 20px 34px 20px;\n  width: 320px;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 80px 80px 159px 80px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding: 80px 16px 75px 16px;\n  }\n`;\n","import AuthForm from 'components/AuthForm/AuthForm';\nimport { RegisterContainer } from './RegisterPage.styled';\n\nexport default function RegisterPage() {\n  return (\n    <RegisterContainer>\n      <AuthForm />\n    </RegisterContainer>\n  );\n}\n","import * as Yup from 'yup';\n\nconst emailReq =\n  // eslint-disable-next-line no-useless-escape\n  /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\nconst passwordReq =\n  // eslint-disable-next-line no-useless-escape\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/;\n\nexport const loginSchema = Yup.object({\n  email: Yup.string()\n    .required('Email field is required!')\n    .min(10)\n    .max(63)\n    .matches(emailReq, 'Invalid email format'),\n\n  password: Yup.string()\n    .required('Password field is required!')\n    .min(6, 'Password is too short. The minimum 6 symbols')\n    .max(16, 'Password is too long. The maximum 16 symbols'),\n});\n\nexport const registerSchema = Yup.object({\n  name: Yup.string()\n    .required('Name field is required!')\n    .min(2, 'Name is too short')\n    .matches(/^[A-Za-z-\\s]+$/, 'Name field can contain only latin letters'),\n\n  email: Yup.string()\n    .required('Email field is required!')\n    .min(10)\n    .max(20)\n    .matches(emailReq, 'Invalid email format'),\n\n  password: Yup.string()\n    .required('Password is required!')\n    .min(6, 'Password is too short. The minimum 6 symbols')\n    .max(16, 'Password is too long. The maximum 16 symbols')\n    .matches(\n      passwordReq,\n      'The must contain 6 characters, 1 uppercase, numbers, 1 special case character'\n    ),\n\n  confirmPassword: Yup.string()\n    .required('Password confirmation is required!')\n    .oneOf([Yup.ref('password'), ''], 'Password confirmation must match'),\n});\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","theme","Titel","_templateObject2","FormField","_templateObject3","InputNameWraper","_templateObject4","InputEmailWraper","_templateObject5","InputPasswordWraper","_templateObject6","InputForm","_templateObject7","Field","_templateObject8","ErrorMess","ErrorMessage","_templateObject9","SuccessMessage","_templateObject10","IconWraper","_templateObject11","IconCheck","_templateObject12","IconCross","_templateObject13","OnIconPass","VisibilityIcon","_templateObject14","OffIconPass","VisibilityOffIcon","_templateObject15","OnIconConPass","_templateObject16","OffIconConPass","_templateObject17","Button","_templateObject18","ToLogin","_templateObject19","LinkStyled","NavLink","_templateObject20","initialValues","name","email","password","confirmPassword","AuthForm","_useState","useState","_useState2","_slicedToArray","passwordShow","setPasswordShow","_useState3","_useState4","confirmPasswordShow","setConfirmPasswordShow","dispatch","useDispatch","navigate","useNavigate","isRegistered","useAuth","togglePassword","prevState","toggleConfirmPassword","useEffect","_jsx","children","Formik","validationSchema","registerSchema","onSubmit","values","_ref","resetForm","data","register","_ref2","errors","touched","_jsxs","Form","style","borderColor","concat","type","placeholder","autoComplete","marginLeft","id","onClick","_objectSpread","Cross","Check","component","to","RegisterContainer","RegisterPage","emailReq","loginSchema","Yup","required","min","max","matches","oneOf"],"sourceRoot":""}